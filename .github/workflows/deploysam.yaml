name: Deploy Flask API using Existing Docker Image

on:
  workflow_dispatch:  # Trigger on manual run
  # push:
  #   branches:
  #     - main  # Trigger on push to the main branch

jobs:
  deploy:
    name: Deploy Flask API
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install AWS SAM CLI
      - name: Install AWS SAM CLI
        run: |
          if ! command -v sam &> /dev/null; then
            echo "SAM CLI not found, installing..."
            sudo apt-get update && sudo apt-get install -y unzip
            curl -Lo sam.zip https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip
            unzip sam.zip -d sam-installation
            sudo ./sam-installation/install
          else
            echo "SAM CLI is already installed. Updating..."
          fi
            sam --version

      # - name: Install AWS SAM CLI
      #   run: |
      #     sudo apt-get update && sudo apt-get install -y unzip
      #     curl -Lo sam.zip https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip
      #     unzip sam.zip -d sam-installation
      #     sudo ./sam-installation/install
      #     sam --version

      # Step 3: Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 4: Deploy using SAM
      - name: Deploy Application
        run: |
          sam deploy \
            --stack-name lambdawithsam \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset \
            --resolve-image-repos
